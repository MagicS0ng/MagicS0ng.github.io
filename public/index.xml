<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>😶‍🌫️Kris的Neverland</title>
    <link>https://magics0ng-github-io.pages.dev/</link>
    <description>Recent content on 😶‍🌫️Kris的Neverland</description>
    <generator>Hugo -- 0.138.0</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 09 Dec 2024 17:09:59 +0800</lastBuildDate>
    <atom:link href="https://magics0ng-github-io.pages.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>快手客户端一面</title>
      <link>https://magics0ng-github-io.pages.dev/posts/%E5%BF%AB%E6%89%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%80%E9%9D%A2/</link>
      <pubDate>Mon, 09 Dec 2024 17:09:59 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/%E5%BF%AB%E6%89%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%80%E9%9D%A2/</guid>
      <description>&lt;h1 id=&#34;自我介绍&#34;&gt;自我介绍&lt;/h1&gt;
&lt;h1 id=&#34;c&#34;&gt;C++&lt;/h1&gt;
&lt;h2 id=&#34;i-i&#34;&gt;i++ ,++i&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;i++&lt;/code&gt;是右值，&lt;code&gt;++i&lt;/code&gt;是左值&lt;/li&gt;
&lt;li&gt;如果在一条语句内执行&lt;code&gt;i++&lt;/code&gt;, 会先获取&lt;code&gt;i&lt;/code&gt;的值，然后执行语句，执行结束后&lt;code&gt;i&lt;/code&gt;自增1&lt;/li&gt;
&lt;li&gt;如果在一条语句内执行&lt;code&gt;++i&lt;/code&gt;, 会先对&lt;code&gt;i&lt;/code&gt;自增1，然后执行语句&lt;/li&gt;
&lt;li&gt;补充：一般来讲，&lt;code&gt;i++&lt;/code&gt; 的执行操作为：使用临时对象保存i的值，然后执行i+1，返回临时对象；&lt;code&gt;++i&lt;/code&gt; 直接对&lt;code&gt;i&lt;/code&gt;自增，不涉及临时变量&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;for-loop&#34;&gt;for-loop&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;for(int i = 0;i&amp;lt;10;i++/++i&amp;gt;)&lt;/code&gt;: ++i 与i++ 输出i，结果一致吗？ 一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;for()&lt;/code&gt;的使用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;for如果使用之前声明的变量，可以直接以&lt;code&gt;for (;condition;expression)&lt;/code&gt; 循环，循环开始时会获取变量的初始值，判断本次执行是否满足条件，满足则执行，执行完循环体，循环变量更新，不满足则结束循环&lt;/li&gt;
&lt;li&gt;也可以使用&lt;code&gt;for(init;condition;expression)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;3. 其他想到的补充：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;对象初始化&#34;&gt;对象初始化&lt;/h2&gt;
&lt;p&gt;回答会根据传递的参数，调用不同的重载。也可以根据成员变成，隐式构造；也可以将构造函数声明为&lt;code&gt;explicit&lt;/code&gt;的，禁止隐式构造。
面试官问还有吗？不知道问的什么，然后继续问了虚函数。&lt;/p&gt;
&lt;h2 id=&#34;虚函数&#34;&gt;虚函数&lt;/h2&gt;
&lt;p&gt;成员函数，通过&lt;code&gt;virtual&lt;/code&gt;修饰，子类继承时可以选择是否重载，也可以通过&lt;code&gt;virtual 成员函数=0&lt;/code&gt;的方式声明为纯虚函数，子类必须重载。
子类继承父类时，构造子类时需要先构造父类，析构时通过声明父类析构为&lt;code&gt;virtual&lt;/code&gt;，先析构子类，后析构父类。
补充：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;纯虚函数的父类为虚基类，无法实例化。&lt;/li&gt;
&lt;li&gt;如果构造函数中包含虚函数，因为子类还没有构造，没有虚函数指针，因此会调用父类的虚函数。&lt;/li&gt;
&lt;li&gt;虚函数，成员函数会存储在代码段，虚函数表存储在&lt;code&gt;rodata&lt;/code&gt;段&lt;/li&gt;
&lt;li&gt;在析构函数中调用虚函数时：基类析构函数在执行时，派生类部分的对象已经被销毁，虚函数表的指针可能不再有效，导致虚函数调用的行为不可预测。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inline&lt;/code&gt; 因为&lt;code&gt;inline&lt;/code&gt;会原地展开，没有具体的地址，无法通过指针访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt;函数不能是虚函数，&lt;code&gt;static&lt;/code&gt;成员函数是类级别的，无法通过多态调用。&lt;/li&gt;
&lt;li&gt;子类可以访问父类的静态资源，只要子类有访问权限&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;staticFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Base static function&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Derived&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;derivedStaticFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Derived static function&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Derived&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;staticFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 访问父类的静态成员函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;Derived&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;staticFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 子类也可以通过类名访问父类的静态成员函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 访问父类的静态成员变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Derived&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 访问子类的静态成员变量,同名资源 优先输出子类的
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;</description>
    </item>
    <item>
      <title>金山二面</title>
      <link>https://magics0ng-github-io.pages.dev/posts/%E9%87%91%E5%B1%B1%E4%BA%8C%E9%9D%A2/</link>
      <pubDate>Thu, 05 Dec 2024 17:19:33 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/%E9%87%91%E5%B1%B1%E4%BA%8C%E9%9D%A2/</guid>
      <description>12/05/2024 金山wpsC++二面</description>
    </item>
    <item>
      <title>金山一面</title>
      <link>https://magics0ng-github-io.pages.dev/posts/%E9%87%91%E5%B1%B1%E4%B8%80%E9%9D%A2/</link>
      <pubDate>Tue, 03 Dec 2024 17:39:51 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/%E9%87%91%E5%B1%B1%E4%B8%80%E9%9D%A2/</guid>
      <description>12/03/2024 金山wpsC++一面</description>
    </item>
    <item>
      <title>Leetcode 3274 12/03/2024</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-3274-12-03-2024/</link>
      <pubDate>Tue, 03 Dec 2024 11:44:04 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-3274-12-03-2024/</guid>
      <description>leetcode 3274 简单题，但是原理不简单</description>
    </item>
    <item>
      <title>Future Async Promise</title>
      <link>https://magics0ng-github-io.pages.dev/posts/future-async-promise/</link>
      <pubDate>Wed, 27 Nov 2024 21:11:39 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/future-async-promise/</guid>
      <description>C&#43;&#43;中std::future, std::packaged_task, std::promise的使用</description>
    </item>
    <item>
      <title>Cpp Thread Basic</title>
      <link>https://magics0ng-github-io.pages.dev/posts/cpp-thread-basic/</link>
      <pubDate>Tue, 26 Nov 2024 20:52:32 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/cpp-thread-basic/</guid>
      <description>C&#43;&#43;多线程的基础概念</description>
    </item>
    <item>
      <title>Leetcode 743</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-743/</link>
      <pubDate>Mon, 25 Nov 2024 23:30:23 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-743/</guid>
      <description>leetcode 743的题解</description>
    </item>
    <item>
      <title>Leetcode 3238</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-3238/</link>
      <pubDate>Sat, 23 Nov 2024 12:11:04 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-3238/</guid>
      <description>leetcode 3238的题解</description>
    </item>
    <item>
      <title>Leetcode 3233</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-3233/</link>
      <pubDate>Fri, 22 Nov 2024 22:13:36 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-3233/</guid>
      <description>leetcode 3233的题解</description>
    </item>
    <item>
      <title>Leetcode 3240</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-3240/</link>
      <pubDate>Fri, 22 Nov 2024 21:43:28 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-3240/</guid>
      <description>leetcode 3240的题解</description>
    </item>
    <item>
      <title>Leetcode 3248</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-3248/</link>
      <pubDate>Thu, 21 Nov 2024 22:19:17 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-3248/</guid>
      <description>leetcode 3248的bfs题解</description>
    </item>
    <item>
      <title>Leetcode 3243</title>
      <link>https://magics0ng-github-io.pages.dev/posts/leetcode-3243/</link>
      <pubDate>Wed, 20 Nov 2024 21:53:37 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/leetcode-3243/</guid>
      <description>leetcode 3243的bfs题解</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>https://magics0ng-github-io.pages.dev/posts/my-first-post/</link>
      <pubDate>Wed, 20 Nov 2024 17:16:47 +0800</pubDate>
      <guid>https://magics0ng-github-io.pages.dev/posts/my-first-post/</guid>
      <description>&lt;p&gt;Hello World!
This is my first post.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
